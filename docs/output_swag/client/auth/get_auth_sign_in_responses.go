// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAuthSignInReader is a Reader for the GetAuthSignIn structure.
type GetAuthSignInReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthSignInReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthSignInOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthSignInBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /auth/sign-in] GetAuthSignIn", response, response.Code())
	}
}

// NewGetAuthSignInOK creates a GetAuthSignInOK with default headers values
func NewGetAuthSignInOK() *GetAuthSignInOK {
	return &GetAuthSignInOK{}
}

/*
GetAuthSignInOK describes a response with status code 200, with default header values.

OK
*/
type GetAuthSignInOK struct {
	Payload string
}

// IsSuccess returns true when this get auth sign in o k response has a 2xx status code
func (o *GetAuthSignInOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get auth sign in o k response has a 3xx status code
func (o *GetAuthSignInOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth sign in o k response has a 4xx status code
func (o *GetAuthSignInOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth sign in o k response has a 5xx status code
func (o *GetAuthSignInOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth sign in o k response a status code equal to that given
func (o *GetAuthSignInOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get auth sign in o k response
func (o *GetAuthSignInOK) Code() int {
	return 200
}

func (o *GetAuthSignInOK) Error() string {
	return fmt.Sprintf("[GET /auth/sign-in][%d] getAuthSignInOK  %+v", 200, o.Payload)
}

func (o *GetAuthSignInOK) String() string {
	return fmt.Sprintf("[GET /auth/sign-in][%d] getAuthSignInOK  %+v", 200, o.Payload)
}

func (o *GetAuthSignInOK) GetPayload() string {
	return o.Payload
}

func (o *GetAuthSignInOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthSignInBadRequest creates a GetAuthSignInBadRequest with default headers values
func NewGetAuthSignInBadRequest() *GetAuthSignInBadRequest {
	return &GetAuthSignInBadRequest{}
}

/*
GetAuthSignInBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAuthSignInBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get auth sign in bad request response has a 2xx status code
func (o *GetAuthSignInBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth sign in bad request response has a 3xx status code
func (o *GetAuthSignInBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth sign in bad request response has a 4xx status code
func (o *GetAuthSignInBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth sign in bad request response has a 5xx status code
func (o *GetAuthSignInBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth sign in bad request response a status code equal to that given
func (o *GetAuthSignInBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get auth sign in bad request response
func (o *GetAuthSignInBadRequest) Code() int {
	return 400
}

func (o *GetAuthSignInBadRequest) Error() string {
	return fmt.Sprintf("[GET /auth/sign-in][%d] getAuthSignInBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthSignInBadRequest) String() string {
	return fmt.Sprintf("[GET /auth/sign-in][%d] getAuthSignInBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthSignInBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetAuthSignInBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
