// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetPagesReader is a Reader for the GetPages structure.
type GetPagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewGetPagesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /pages] GetPages", response, response.Code())
	}
}

// NewGetPagesAccepted creates a GetPagesAccepted with default headers values
func NewGetPagesAccepted() *GetPagesAccepted {
	return &GetPagesAccepted{}
}

/*
GetPagesAccepted describes a response with status code 202, with default header values.

Accepted
*/
type GetPagesAccepted struct {
	Payload string
}

// IsSuccess returns true when this get pages accepted response has a 2xx status code
func (o *GetPagesAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pages accepted response has a 3xx status code
func (o *GetPagesAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pages accepted response has a 4xx status code
func (o *GetPagesAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pages accepted response has a 5xx status code
func (o *GetPagesAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get pages accepted response a status code equal to that given
func (o *GetPagesAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the get pages accepted response
func (o *GetPagesAccepted) Code() int {
	return 202
}

func (o *GetPagesAccepted) Error() string {
	return fmt.Sprintf("[GET /pages][%d] getPagesAccepted  %+v", 202, o.Payload)
}

func (o *GetPagesAccepted) String() string {
	return fmt.Sprintf("[GET /pages][%d] getPagesAccepted  %+v", 202, o.Payload)
}

func (o *GetPagesAccepted) GetPayload() string {
	return o.Payload
}

func (o *GetPagesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPagesBadRequest creates a GetPagesBadRequest with default headers values
func NewGetPagesBadRequest() *GetPagesBadRequest {
	return &GetPagesBadRequest{}
}

/*
GetPagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPagesBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get pages bad request response has a 2xx status code
func (o *GetPagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pages bad request response has a 3xx status code
func (o *GetPagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pages bad request response has a 4xx status code
func (o *GetPagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pages bad request response has a 5xx status code
func (o *GetPagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get pages bad request response a status code equal to that given
func (o *GetPagesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get pages bad request response
func (o *GetPagesBadRequest) Code() int {
	return 400
}

func (o *GetPagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /pages][%d] getPagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPagesBadRequest) String() string {
	return fmt.Sprintf("[GET /pages][%d] getPagesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPagesBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetPagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPagesUnauthorized creates a GetPagesUnauthorized with default headers values
func NewGetPagesUnauthorized() *GetPagesUnauthorized {
	return &GetPagesUnauthorized{}
}

/*
GetPagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPagesUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this get pages unauthorized response has a 2xx status code
func (o *GetPagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pages unauthorized response has a 3xx status code
func (o *GetPagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pages unauthorized response has a 4xx status code
func (o *GetPagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pages unauthorized response has a 5xx status code
func (o *GetPagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get pages unauthorized response a status code equal to that given
func (o *GetPagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get pages unauthorized response
func (o *GetPagesUnauthorized) Code() int {
	return 401
}

func (o *GetPagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /pages][%d] getPagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /pages][%d] getPagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPagesUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *GetPagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
