// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAPIV1AuthSignUpReader is a Reader for the GetAPIV1AuthSignUp structure.
type GetAPIV1AuthSignUpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1AuthSignUpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1AuthSignUpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1AuthSignUpBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAPIV1AuthSignUpForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1AuthSignUpInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/auth/sign-up] GetAPIV1AuthSignUp", response, response.Code())
	}
}

// NewGetAPIV1AuthSignUpOK creates a GetAPIV1AuthSignUpOK with default headers values
func NewGetAPIV1AuthSignUpOK() *GetAPIV1AuthSignUpOK {
	return &GetAPIV1AuthSignUpOK{}
}

/*
GetAPIV1AuthSignUpOK describes a response with status code 200, with default header values.

OK
*/
type GetAPIV1AuthSignUpOK struct {
	Payload string
}

// IsSuccess returns true when this get Api v1 auth sign up o k response has a 2xx status code
func (o *GetAPIV1AuthSignUpOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api v1 auth sign up o k response has a 3xx status code
func (o *GetAPIV1AuthSignUpOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth sign up o k response has a 4xx status code
func (o *GetAPIV1AuthSignUpOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 auth sign up o k response has a 5xx status code
func (o *GetAPIV1AuthSignUpOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth sign up o k response a status code equal to that given
func (o *GetAPIV1AuthSignUpOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api v1 auth sign up o k response
func (o *GetAPIV1AuthSignUpOK) Code() int {
	return 200
}

func (o *GetAPIV1AuthSignUpOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpOK  %+v", 200, o.Payload)
}

func (o *GetAPIV1AuthSignUpOK) String() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpOK  %+v", 200, o.Payload)
}

func (o *GetAPIV1AuthSignUpOK) GetPayload() string {
	return o.Payload
}

func (o *GetAPIV1AuthSignUpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthSignUpBadRequest creates a GetAPIV1AuthSignUpBadRequest with default headers values
func NewGetAPIV1AuthSignUpBadRequest() *GetAPIV1AuthSignUpBadRequest {
	return &GetAPIV1AuthSignUpBadRequest{}
}

/*
GetAPIV1AuthSignUpBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAPIV1AuthSignUpBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get Api v1 auth sign up bad request response has a 2xx status code
func (o *GetAPIV1AuthSignUpBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth sign up bad request response has a 3xx status code
func (o *GetAPIV1AuthSignUpBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth sign up bad request response has a 4xx status code
func (o *GetAPIV1AuthSignUpBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 auth sign up bad request response has a 5xx status code
func (o *GetAPIV1AuthSignUpBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth sign up bad request response a status code equal to that given
func (o *GetAPIV1AuthSignUpBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api v1 auth sign up bad request response
func (o *GetAPIV1AuthSignUpBadRequest) Code() int {
	return 400
}

func (o *GetAPIV1AuthSignUpBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV1AuthSignUpBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV1AuthSignUpBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetAPIV1AuthSignUpBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthSignUpForbidden creates a GetAPIV1AuthSignUpForbidden with default headers values
func NewGetAPIV1AuthSignUpForbidden() *GetAPIV1AuthSignUpForbidden {
	return &GetAPIV1AuthSignUpForbidden{}
}

/*
GetAPIV1AuthSignUpForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAPIV1AuthSignUpForbidden struct {
	Payload string
}

// IsSuccess returns true when this get Api v1 auth sign up forbidden response has a 2xx status code
func (o *GetAPIV1AuthSignUpForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth sign up forbidden response has a 3xx status code
func (o *GetAPIV1AuthSignUpForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth sign up forbidden response has a 4xx status code
func (o *GetAPIV1AuthSignUpForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api v1 auth sign up forbidden response has a 5xx status code
func (o *GetAPIV1AuthSignUpForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api v1 auth sign up forbidden response a status code equal to that given
func (o *GetAPIV1AuthSignUpForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get Api v1 auth sign up forbidden response
func (o *GetAPIV1AuthSignUpForbidden) Code() int {
	return 403
}

func (o *GetAPIV1AuthSignUpForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV1AuthSignUpForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpForbidden  %+v", 403, o.Payload)
}

func (o *GetAPIV1AuthSignUpForbidden) GetPayload() string {
	return o.Payload
}

func (o *GetAPIV1AuthSignUpForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1AuthSignUpInternalServerError creates a GetAPIV1AuthSignUpInternalServerError with default headers values
func NewGetAPIV1AuthSignUpInternalServerError() *GetAPIV1AuthSignUpInternalServerError {
	return &GetAPIV1AuthSignUpInternalServerError{}
}

/*
GetAPIV1AuthSignUpInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAPIV1AuthSignUpInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get Api v1 auth sign up internal server error response has a 2xx status code
func (o *GetAPIV1AuthSignUpInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api v1 auth sign up internal server error response has a 3xx status code
func (o *GetAPIV1AuthSignUpInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api v1 auth sign up internal server error response has a 4xx status code
func (o *GetAPIV1AuthSignUpInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api v1 auth sign up internal server error response has a 5xx status code
func (o *GetAPIV1AuthSignUpInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api v1 auth sign up internal server error response a status code equal to that given
func (o *GetAPIV1AuthSignUpInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api v1 auth sign up internal server error response
func (o *GetAPIV1AuthSignUpInternalServerError) Code() int {
	return 500
}

func (o *GetAPIV1AuthSignUpInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV1AuthSignUpInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/auth/sign-up][%d] getApiV1AuthSignUpInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV1AuthSignUpInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetAPIV1AuthSignUpInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
